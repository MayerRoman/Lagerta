<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2017. EPAM Systems
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="ignite.cfg" class="org.apache.ignite.configuration.IgniteConfiguration" scope="prototype">
        <property name="gridName" value="#{T(java.util.UUID).randomUUID().toString()}"/>

        <property name="serviceConfiguration">
            <list>
                <bean class="org.apache.ignite.services.ServiceConfiguration">
                    <property name="name" value="commands.service"/>
                    <property name="maxPerNodeCount" value="1"/>
                    <property name="totalCount" value="1"/>
                    <property name="service" value="#{activeStoreConfig.commandService()}"/>
                </bean>
                <bean class="org.apache.ignite.services.ServiceConfiguration">
                    <property name="name" value="replicationDeployer"/>
                    <property name="maxPerNodeCount" value="1"/>
                    <property name="totalCount" value="1"/>
                    <property name="service" value="#{activeStoreConfig.replicationDeployService()}"/>
                </bean>
            </list>
        </property>

        <property name="discoverySpi">
            <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder">
                        <property name="multicastGroup" value="229.10.10.143"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="idSequencerFactory" class="org.apache.ignite.activestore.impl.kafka.KafkaIdSequencerFactory">
        <property name="kafkaProducerProperties">
            <props>
                <prop key="bootstrap.servers">127.0.0.1:9092</prop>
                <prop key="acks">all</prop>
                <prop key="retries">0</prop>
                <prop key="batch.size">16384</prop>
                <prop key="linger.ms">1</prop>
                <prop key="buffer.memory">33554432</prop>
                <prop key="key.serializer">org.apache.kafka.common.serialization.ByteBufferSerializer</prop>
                <prop key="value.serializer">org.apache.kafka.common.serialization.ByteBufferSerializer</prop>
            </props>
        </property>
        <property name="topic" value="Sequencer"/>
    </bean>

    <bean id="activeStoreConfig" class="org.apache.ignite.activestore.impl.subscriber.consumer.DRDataCapturerBusConfiguration">
        <property name="dataRecoveryConfig">
            <props>
                <prop key="data.capturer.topic">synctopic</prop>
                <prop key="data.capturer.dr.consumers">3</prop>
                <prop key="bootstrap.servers">127.0.0.1:9092</prop>
                <prop key="acks">all</prop>
                <prop key="retries">0</prop>
                <prop key="batch.size">16384</prop>
                <prop key="linger.ms">1</prop>
                <prop key="buffer.memory">33554432</prop>
                <prop key="key.serializer">org.apache.kafka.common.serialization.ByteBufferSerializer</prop>
                <prop key="value.serializer">org.apache.kafka.common.serialization.ByteBufferSerializer</prop>
            </props>
        </property>

        <property name="replicationProperties">
            <props>
                <prop key="data.capturer.topic">D.</prop>
                <prop key="data.capturer.partitions">1</prop> <!-- Only one partition for local machine -->
                <prop key="bootstrap.servers">127.0.0.1:9092</prop>
                <prop key="acks">all</prop>
                <prop key="retries">0</prop>
                <prop key="batch.size">16384</prop>
                <prop key="linger.ms">1</prop>
                <prop key="buffer.memory">33554432</prop>
                <prop key="key.serializer">org.apache.kafka.common.serialization.ByteBufferSerializer</prop>
                <prop key="value.serializer">org.apache.kafka.common.serialization.ByteBufferSerializer</prop>
            </props>
        </property>
        <property name="idSequencerFactory" ref="idSequencerFactory"/>

        <property name="listeners">
            <list>
                <value type="java.lang.Class">#{T(org.apache.ignite.activestore.impl.kv.SnapshotAwareKeyValueReaderListener)}</value>
            </list>
        </property>

    </bean>
</beans>
